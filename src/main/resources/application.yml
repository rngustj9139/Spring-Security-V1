server:
  port: 8080
  servlet:
    context-path: /
    encoding:
      charset: UTF-8
      enabled: true
      force: true

spring:
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/security?serverTimezone=Asia/Seoul
    username: root
    password: root

  #  mvc: # 생략 가능(mustache 의존성 추가했기 때문)
  #    view:
  #      prefix: /templates/
  #      suffix: .mustache

  jpa:
    hibernate:
      ddl-auto: create #create update none
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
    show-sql: true

  security:
    oauth2:
      client:
        registration:
          google:
            client-id: 974070161222-dgu16tsiv1fqrjljqecask65j573jluj.apps.googleusercontent.com
            client-secret: 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
            scope:
              - email
              - profile
          facebook:
            client-id: 515966647175813
            client-secret: 6ea6999dc5e25f6c4184f9ff2b430217
            scope:
              - email
              - public_profile
          naver:
            client-id: 4zKMWKQWKWLdLVYzuV1w
            client-secret: AXoY95l3eS
            scope:
              - email
              - name
#             - profile_image
            client-name: Naver
            authorization-grant-type: authorization_code # 네이버도 기본적으로 Authorization code grant type 방식을 이용한다 (코드를 부여받고 엑세스 토큰을 받음)
            redirect-uri: http://localhost:8080/login/oauth2/code/naver # code를 받는 주소

        provider: # 네이버는 구글, 페이스북, 트위터와는 달리 OAuth2 Client에 기본적으로 등록된 provider가 아니다. (따라서 따로 등록을 해주어야한다.)
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize # 이 주소로 요청을 하면 네이버 로그인이 된다. (<a href="/oauth2/authorization/naver">네이버 로그인</a> 로 요청을하면 실제로는 맨 앞의 주소가 실행된다.)
            token-uri: https://nid.naver.com/oauth2.0/token # 토큰을 받는다면 이 주소를 사용해야한다.
            user-info-uri: https://openapi.naver.com/v1/nid/me # 프로필을 받는다면 이 주소를 사용해야한다.
            user-name-attribute: response # 회원정보를 json으로 받는데, response라는 키값으로 네이버가 리턴해준다.

